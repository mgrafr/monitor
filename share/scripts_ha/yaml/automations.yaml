- id: mqtt_12345678
  alias: "essai mqtt"
  trigger:
  - platform: state
    entity_id: light.lampe_jardin, light.lampe_terrasse
    to: 
    - 'on'
    - 'off'
  condition: []
  action:
  - service: mqtt.publish
    data_template:
      topic: monitor/ha
      payload_template: >-
        {"idx": "{{ trigger.entity_id }}","state": "{{ trigger.to_state.state }}" }
  - service: pyscript.mqtt_publish
    data_template:
      topic: monitor/ha
      idx: "{{ trigger.entity_id }}"
      state: "{{ trigger.to_state.state }}"
        
       

- id: annulation_notification_lastseen
  alias: annulation notification lastseen
  trigger:
  - platform: state
    entity_id:
    - input_boolean.essai
    to: 'on'
    from: 'off'
  condition: []
  action:
  - delay:
      milliseconds: 500
  - service: input_boolean.turn_off
    target:
      entity_id: input_boolean.essai
  - service: input_text.set_value
    data:
      value: ' '
    target:
      entity_id: input_text.essai
- id: lastseen_alerte_dispositifs
  alias: LastSeen Alerte Dispositifs
  trigger:
  - platform: time
    at: '23:11:00'
  condition:
  - condition: template
    value_template: '{% set ns = namespace(break = false) %} {% for state in states
      -%} {%- if state.attributes.last_seen %} {%- if (as_timestamp(now()) - as_timestamp(state.attributes.last_seen)
      > (60 * 25) ) and ns.break == false %} {%- set ns.break = true %} true   {%-
      endif -%} {%- endif -%}{%- endfor %}'
  action:
  - service: input_text.set_value
    target:
      entity_id: input_text.essai
    data:
      value: "Certains appareils Zigbee n’ont pas été vus dernièrement...\n  {% for
        state in (expand(states.sensor, states.binary_sensor, states.light, states.switch)
        | selectattr('attributes.last_seen', 'defined')) -%}\n    {%- if not (state.name
        | regex_search('linkquality|button_fan|update state|voltage|temperature|battery|illuminance'))
        %}\n      {%- if (as_timestamp(now()) - as_timestamp(state.attributes.last_seen)
        > (60 * 25) ) %}\n        {{ ((as_timestamp(now()) - as_timestamp(state.attributes.last_seen))
        / (3600)) | round(1) }} hours ago for {{ state.name }}            \n      {%-
        endif -%}\n    {%- endif -%}\n  {%- endfor %}\n"
  - service: rest_command.monitor_1
    data:
      svalue: "{{ states('input_text.essai') }}"
  - service: persistent_notification.create
    data:
      notification_id: not_lastseen
      title: Lastseen
      message: !include message2.yaml
  - service: notify.email
    data:
      title: alerte dispositifs
      message: !include message2.yaml
  - service: notify.mobile_app_RMO_NX1
    data:
      message: !include message2.yaml
